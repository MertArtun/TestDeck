import React from "react";
import ReactDOM from "react-dom/client";
import "./index.css"; // Ana CSS dosyası

// Önce basit app'i yükle, sonra isteğe bağlı olarak ana app'i yükle
import SimpleApp from "./SimpleApp";
import MinimalApp from "./MinimalApp";

console.log('🚀 TestDeck Ana Uygulama başlatılıyor...');

const root = document.getElementById("root");
if (!root) {
  throw new Error("Root element bulunamadı!");
}

// Ana wrapper componenti
const AppWrapper = () => {
  const [currentApp, setCurrentApp] = React.useState<'minimal' | 'simple' | 'main'>('simple');
  const [loading, setLoading] = React.useState(false);
  const [error, setError] = React.useState<string | null>(null);
  
  const loadMainApp = async () => {
    setLoading(true);
    setError(null);
    
    try {
      console.log('📦 Ana uygulama yükleniyor...');
      
      // Ana App bileşenini dinamik olarak yükle
      const { default: App } = await import('./App');
      
      console.log('✅ Ana uygulama başarıyla yüklendi');
      
      // Yeni bir container oluştur
      const appContainer = document.createElement('div');
      appContainer.id = 'main-app-root';
      document.body.appendChild(appContainer);
      
      // Ana uygulamayı render et
      const mainRoot = ReactDOM.createRoot(appContainer);
      mainRoot.render(
        <React.StrictMode>
          <App />
        </React.StrictMode>
      );
      
      // Ana root'u gizle
      root.style.display = 'none';
      
    } catch (error: any) {
      console.error('❌ Ana uygulama yüklenirken hata:', error);
      setError('Ana uygulama yüklenirken hata: ' + error.message);
    } finally {
      setLoading(false);
    }
  };
  
  if (loading) {
    return (
      <div style={{
        minHeight: '100vh',
        background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
        display: 'flex',
        alignItems: 'center',
        justifyContent: 'center',
        color: 'white',
        fontFamily: 'Arial, sans-serif'
      }}>
        <div style={{ textAlign: 'center' }}>
          <div style={{
            border: '4px solid rgba(255, 255, 255, 0.3)',
            borderRadius: '50%',
            borderTop: '4px solid white',
            width: '40px',
            height: '40px',
            animation: 'spin 1s linear infinite',
            margin: '0 auto 20px'
          }}></div>
          <p>Ana TestDeck uygulaması yükleniyor...</p>
          <p style={{ fontSize: '14px', opacity: 0.7 }}>Bu biraz zaman alabilir...</p>
        </div>
      </div>
    );
  }
  
  if (error) {
    return (
      <div style={{
        minHeight: '100vh',
        background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
        display: 'flex',
        alignItems: 'center',
        justifyContent: 'center',
        color: 'white',
        fontFamily: 'Arial, sans-serif'
      }}>
        <div style={{
          background: 'rgba(255, 255, 255, 0.1)',
          padding: '40px',
          borderRadius: '20px',
          textAlign: 'center',
          backdropFilter: 'blur(10px)',
          border: '1px solid rgba(255, 255, 255, 0.2)',
          maxWidth: '500px'
        }}>
          <h2>❌ Yükleme Hatası</h2>
          <p style={{ color: '#fca5a5', fontFamily: 'monospace', fontSize: '14px' }}>
            {error}
          </p>
          <div style={{ marginTop: '20px' }}>
            <button 
              onClick={() => setCurrentApp('simple')}
              style={{
                background: '#10b981',
                color: 'white',
                border: 'none',
                padding: '10px 20px',
                borderRadius: '8px',
                cursor: 'pointer',
                margin: '5px'
              }}
            >
              Basit Moda Dön
            </button>
            <button 
              onClick={() => setCurrentApp('minimal')}
              style={{
                background: '#3b82f6',
                color: 'white',
                border: 'none',
                padding: '10px 20px',
                borderRadius: '8px',
                cursor: 'pointer',
                margin: '5px'
              }}
            >
              Minimal Moda Dön
            </button>
            <button 
              onClick={() => window.location.reload()}
              style={{
                background: '#ef4444',
                color: 'white',
                border: 'none',
                padding: '10px 20px',
                borderRadius: '8px',
                cursor: 'pointer',
                margin: '5px'
              }}
            >
              Sayfayı Yenile
            </button>
          </div>
        </div>
      </div>
    );
  }
  
  if (currentApp === 'minimal') {
    return (
      <div>
        <MinimalApp />
        <div style={{
          position: 'fixed',
          top: '20px',
          right: '20px',
          zIndex: 1000
        }}>
          <button 
            onClick={() => setCurrentApp('simple')}
            style={{
              background: '#10b981',
              color: 'white',
              border: 'none',
              padding: '10px 20px',
              borderRadius: '8px',
              cursor: 'pointer',
              fontWeight: 'bold'
            }}
          >
            Basit Moda Geç
          </button>
        </div>
      </div>
    );
  }
  
  if (currentApp === 'simple') {
    return (
      <div>
        <SimpleApp />
        <div style={{
          position: 'fixed',
          top: '20px',
          right: '20px',
          zIndex: 1000,
          display: 'flex',
          flexDirection: 'column',
          gap: '10px'
        }}>
          <button 
            onClick={() => setCurrentApp('minimal')}
            style={{
              background: '#3b82f6',
              color: 'white',
              border: 'none',
              padding: '8px 16px',
              borderRadius: '6px',
              cursor: 'pointer',
              fontSize: '12px'
            }}
          >
            Minimal Mod
          </button>
          <button 
            onClick={loadMainApp}
            style={{
              background: '#10b981',
              color: 'white',
              border: 'none',
              padding: '12px 20px',
              borderRadius: '8px',
              cursor: 'pointer',
              fontWeight: 'bold'
            }}
          >
            🚀 Ana Uygulamayı Yükle
          </button>
        </div>
      </div>
    );
  }
  
  return null;
};

try {
  ReactDOM.createRoot(root).render(
    <React.StrictMode>
      <AppWrapper />
    </React.StrictMode>
  );
  console.log('✅ AppWrapper başarıyla render edildi!');
} catch (error: any) {
  console.error('❌ Render hatası:', error);
  
  // Fallback
  root.innerHTML = `
    <div style="
      min-height: 100vh;
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      display: flex;
      align-items: center;
      justify-content: center;
      color: white;
      font-family: Arial, sans-serif;
      text-align: center;
    ">
      <div style="
        background: rgba(255, 255, 255, 0.1);
        padding: 40px;
        border-radius: 20px;
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.2);
      ">
        <h1>❌ Kritik Hata</h1>
        <p>Uygulama başlatılırken kritik bir hata oluştu:</p>
        <p style="color: #fca5a5; font-family: monospace;">${error.message}</p>
        <button onclick="window.location.reload()" style="
          background: #ef4444;
          color: white;
          border: none;
          padding: 15px 30px;
          border-radius: 8px;
          cursor: pointer;
          font-size: 16px;
          margin-top: 20px;
        ">Sayfayı Yenile</button>
        <br><br>
        <button onclick="window.location.href='simple_test.html'" style="
          background: #3b82f6;
          color: white;
          border: none;
          padding: 10px 20px;
          border-radius: 8px;
          cursor: pointer;
          font-size: 14px;
        ">Basit Teste Dön</button>
      </div>
    </div>
  `;
}